<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.sandalorian</groupId>
  <artifactId>git-tag-demo</artifactId>
  <version>cli/2024.Q3-66</version>

  <properties>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>5.10.3</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>

    <plugins>
      <!-- You need to build an exectuable uberjar, I like Shade for that -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.0</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <manifestEntries>> <Main-Class>com.sandalorian.Main</Main-Class>
                    <!--    
                                                These values are use to provide custom version information. 
                                                The values below are copied into the META-INF/MANIFEST.INF.
                                                They are then accessed using a custom VersionProvider in picocli 
                                            -->
                                            <Implementation-Title>
                    ${project.artifactId}</Implementation-Title>
                                            <Implementation-Version>
                    ${project.version}</Implementation-Version>
                                            <Implementation-Vendor-Id>
                    ${project.groupId}</Implementation-Vendor-Id>
                  </manifestEntries>
                </transformer>
              </transformers>
              <createDependencyReducedPom>false</createDependencyReducedPom>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- now make the jar chmod +x style executable -->
      <plugin>
        <groupId>org.skife.maven</groupId>
        <artifactId>really-executable-jar-maven-plugin</artifactId>
        <version>2.1.1</version>
        <configuration>
          <!-- value of flags will be interpolated into the java invocation -->
          <!-- as "java $flags -jar ..." -->
          <flags>-Xmx1G</flags>
          <!-- This is set as per syn-119 -->
          <programFile>${artifactId}</programFile>

          <!-- (optional) support other packaging formats than jar -->
          <!-- <allowOtherTypes>true</allowOtherTypes> -->

          <!-- (optional) name for a file that will define what script gets -->
          <!-- embedded into the executable jar.  This can be used to -->
          <!-- override the default startup script which is -->
          <!-- `#!/bin/sh -->
          <!--            -->
          <!-- exec java " + flags + " -jar "$0" "$@" -->
          <!-- <scriptFile>src/packaging/someScript.extension</scriptFile> -->
        </configuration>

        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>really-executable-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.3.0</version>
      </plugin>
    </plugins>
  </build>

</project>